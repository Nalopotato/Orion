//#include Autoload.oajs

const _stats = [
    'Strength Bonus',
    'Intelligence Bonus',
    'Dexterity Bonus',
    
    'Faster Casting',
    'Faster Cast Recovery',
    
    'Hit Point Increase',
    'Hit Point Regeneration',
    'Mana Increase',
    'Mana Regeneration',
    'Stamina Increase',
    'Stamina Regeneration',

    'Lower Reagent Cost',
    'Lower Mana Cost',
    
    'Damage Increase',
    'Swing Speed Increase',
    'Defense Chance Increase',
    'Hit Chance Increase',
    'Spell Damage Increase',
    
    'Reflect Physical Damage',
    'Enhance Potions',
    'Luck',

    'Physical Resist',
    'Fire Resist',
    'Cold Resist',
    'Poison Resist',
    'Energy Resist'
];

//For other mobiles, this is proximity based.  Make sure you are close enough to the other player!
function GetStats()
{    
    var sumStats = [];
    var totalStats = 0;
    
    for (var i=0; i < _stats.length; i++){
        sumStats[i] = parseInt(0);
    }
    
    TextWindow.Clear();

    Orion.Print(15, 'Select a person');
    Orion.WaitForAddObject('Person');
    serial = Orion.GetSerial('Person');
    
    for (var i = 1; i < 24; i++) { //24 is the last equipable layer, out of 29 layers
        getSingleProperties(i, sumStats);
    }
    
    var person = Orion.FindObject(serial);
    TextWindow.Print('Player: ' + person.Name());

    for (var i = 0; i < _stats.length; i++) {
        TextWindow.Print(_stats[i] + ': ' + sumStats[i]);
        if (i == 2 || i == 4 || i == 10 || i == 12 || i == 17 || i == 20) {
            TextWindow.Print('');
        }
        totalStats += sumStats[i];
    }

    Orion.Print(15, 'Total Stats: ' + totalStats);

    TextWindow.Open();
    TextWindow.SaveToFile('properties.txt');
}


function getSingleProperties(layer, sumStats)
{
    var obj = Orion.ObjAtLayer(layer);
    if (obj) {
        obj = obj.Properties();
        var objLine = Orion.Split(obj, '\n');

        for (var i = 0; i < objLine.length; i++) {
            var matches = /([a-zA-Z ]+)(-?\d+)/gi.exec(objLine[i]);
            if (matches) {
                for (var j = 1; j < matches.length; j++) {
                	var idx = _stats.indexOf(matches[j].trim());
	                if (idx >= 0) {
	                    sumStats[idx] += parseInt(matches[j+1]);
	                }
            	}
            }
        }
    }
}