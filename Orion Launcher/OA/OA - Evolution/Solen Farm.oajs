//#include Autoload.oajs

//Asante sana, squash banana

//const _lootBagID = '0x4266ADBA';
//const _casterKeysID = '0x466B92BD';
//const _bagOfSendingID = '0x42F8FCE3';
const _runeBooks = [
	['0x40C01DBE', 7, 117],  //Solen
	['0x40D17D00', 7, 157],  //XP Farm
	['0x47A8D815', 27, 137], //Sheep
	['0x49A819EF', 7, 87]  	 //XP
];

var _runebookID = _runeBooks[0][0];
var _bookIndex = 17;
var _currentBookIdx = 0;

//TODO:  Skip area if there is a player
//TODO:  Auto-stop when weapon/armor needs repair
//TODO:  When opening a corpse, QUICKLY scan items and compare to the AutoL00t Find list, and if nothing matches, CLAIM it right away

function KillSolen()
{
	Orion.ClearJournal();
	
	while (!Player.Dead())
	{
		if (Orion.ScriptRunning('AutoAttack') < 1) { Orion.ToggleScript('AutoAttack', true); }
		if (Orion.ScriptRunning('HealSelf') < 1) { Orion.ToggleScript('HealSelf', true); }
		
		useRunebook(_bookIndex, _runebookID);
		
		while (Orion.Count('0x26B7', any, _lootBagID) < 200) //Fungi in loot bag
		{
			Orion.SetTimer('RecallTimer');

			findTargetsToKill(50000);
			claimCorpses();
			findTargetsToKill(50000); //Double check to make sure there are no targets left
			claimCorpses();
			
			while (Orion.Timer('RecallTimer') < 5500) {
				Orion.Wait(100);
			}

			_bookIndex += 10;

			useRunebook(_bookIndex, _runebookID); //Recall to next spawn
			checkForPlayers(); //GTFO if we find a player
			runebookRouter(_currentBookIdx); //Route to a new Runebook if ready
			
			var goldAmt = Orion.Count('0x0EED', any, backpack, any, false);
			Orion.SetTimer('MoveGold');
			while (goldAmt > 0) {
				Orion.MoveItemType('0x0EED', any, backpack, 0, _lootBagID);
				Orion.Wait(600);
				if (Orion.Timer('MoveGold') > 1500)
					break;
			}
			if (Orion.Count('0x26B7', any, backpack, any, false) > 0) {
				Orion.MoveItemType('0x26B7', any, backpack, 0, _lootBagID);
				Orion.Wait(600);
			}

			//sendGold(_bagOfSendingID, _lootBagID, 9000); //Also happens in AutoAttack

			if (Orion.InJournal('That container cannot hold more', 'sys') || Player.Weight() > (Player.MaxWeight() * 0.7)) {
				bankUnload();
			}
		}
		
		bankSolen();
		runToVat();
		turnInSolenQuest();
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
var runebookRouter = function(bookNum) {
	if (_runebookID == _runeBooks[bookNum][0] && _bookIndex == _runeBooks[bookNum][2]) {
		if (bookNum == _runeBooks.length - 1) { //Start over when we reach the last Runebook
			_runebookID = _runeBooks[0][0];
			_bookIndex = _runeBooks[0][1];
			_currentBookIdx = 0;
			return;
		}

		_runebookID = _runeBooks[bookNum + 1][0];
		_bookIndex = _runeBooks[bookNum + 1][1];
		_currentBookIdx++;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
var bankSolen = function() {
	if (_debugMode) {Orion.Print(26, 'bankSolen');}

	bankUnload();
	
	if (Orion.Count('0x1F9D', 0, backpack) > 7)
		return;
		
	GetGold(100); //Get money for Water

	//Get Water
	var vendors = ['Saloman', 'Fleta', 'Kenton', 'Fuller', 'Oriole', 'Carroll'];
	var tavern = 1;

	RecallBuyWater(tavern, _runeBooks[0][0]);
	Orion.Wait(3000);
	
	for (var i = 0; i < vendors.length; i++) {
		if (Orion.Count('0x1F9D', 0, backpack) > 7)
			break;

		Orion.ClearJournal();

		if (Orion.InJournal('must wait to perform') || 
			Orion.InJournal('book needs time') ||
			(tavern == 1 && Player.X() != 1426) ||
			(tavern == 2 && Player.X() != 2475))
		{
			Orion.Print('26', 'Recall again');
			Orion.Wait(5000);
			Orion.ClearJournal();
			RecallBuyWater(tavern, _runeBooks[0][0]);
			Orion.Wait(3000);
		}
		
		Orion.BuyRestock('Water', vendors[i]);
		//Orion.Say(vendors[i] + ' buy');
		Orion.Wait(2000);
		
		if (i == 2) //Move to next Tavern, if we've gone thru 3 NPCs
		{
			tavern ++;
			RecallBuyWater(tavern, _runeBooks[0][0]);
			Orion.Wait(2000);
		}
	}
	
	if (Orion.Count('0x1F9D', 0, backpack) < 8)
		KillSolen();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
var runToVat = function() {
	if (_debugMode) {Orion.Print(26, 'RunToVat');}

	if (Orion.ScriptRunning('AutoAttack') > 0) { Orion.ToggleScript('AutoAttack', true); }
	
	while (Player.X() != '2609')
	{
		RecallRunSolen(_runeBooks[0][0]);
	}
	
	Orion.UseObject('0x40010254');
	Orion.Wait(300);

	//Floor 1	
	if (!PathTo(5921, 5900, 1876, 0))
		runToVat();
	Orion.UseObject('0x40010277');
	Orion.Wait(300);
	
	//Floor 2
	if (!PathTo(5874, 5855, 1851, 0))
		runToVat();
	Orion.UseObject('0x4001028C');
	Orion.Wait(300);
	
	//Floor 3
	if (!PathTo('any', 5805, 1919, 0))
		runToVat();
	Orion.Wait(300);

	//Pour Water
	var breakOut = 0;
	while (Orion.Count('0x1F9D', any, backpack) > 0)
	{
		Orion.UseType('0x1F9D');
		Orion.WaitForTarget(5000);
		Orion.TargetObject('0x4000B26D');
		Orion.Wait(600);
		
		breakOut++;
		if (breakOut >= 10) {break;}
	}
	
	//Trash pitchers
	while (Orion.Count('0x0FF6', any, backpack) > 0)
	{
		Orion.MoveItemType('0x0FF6', 0, backpack, 0, 0x4B9E379D);
		Orion.Wait(600);
		
		breakOut++;
		if (breakOut >= 20) {break;}
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
var turnInSolenQuest = function() {
	if (_debugMode) {Orion.Print(15, 'turnInSolenQuest');}

	PathTo(5805, 5779, 1901, 1);

	var matriarch = Orion.FindObject('0x001D0274');
	if (matriarch)
	{
		PathTo('any', matriarch.X(), matriarch.Y(), 1);
	}
		
	GetZoogi(_casterKeys);
	
	//Turn in Kill quest, and get new quest
	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60000, 100, false);
	GumpAction('0x23C255E7', 60007, 100, false);
	GumpAction('0x23C255E7', 60007, 100, false);
	GumpAction('0x23C255E7', 60007, 100, false);
	
	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60000, 100, false);
	GumpAction('0x23C255E7', 60006, 100, false);

	//Turn in Fungi quest, and get new quest
	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60001, 100, false);
	GumpAction('0x23C255E7', 60006, 100, false);
	GumpAction('0x23C255E7', 60006, 100, false);

	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60001, 150, false);
	GumpAction('0x23C255E7', 60007, 150, false);
	
	if (Orion.Count('0x26B8') < 1)
	{
		Orion.Print('26', '*** FAILED ***');
		turnInSolenQuest();
	}
	
	while (Orion.Count(0x26B8, any, backpack) > 1)
	{
		Orion.Wait(50);
		if (_debugMode) {Orion.Print('26', 'Store Transloc');}
		storeItemWithKeys(_casterKeys, '0x0EBCD833', 60030, '0x26B8', 0);
	}
	
	Orion.Wait(2000);
}

var bankUnload = function() {
	if (_debugMode) {Orion.Print(15, 'Bank Unload');}
	Recall(_runeBooks[0][0], 147);
	Orion.Wait(3500);
	
	if (Player.X() != 1450)
	{
		return bankSolen();
	}
	
	Orion.Say('faxon sell');
	Orion.Wait(5000);

	Orion.Say('bank');
	Orion.Wait(300);
	organizeGoldGems(backpack);
	organizeGoldGems(_lootBagID);
}