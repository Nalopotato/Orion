//#include Autoload.oajs

//Asante sana, squash banana

const _lootBagID = '0x4266ADBA';
const _casterKeysID = '0x466B92BD';
const _bagOfSendingID = '0x42F8FCE3';
const _runeBooks = [
	['0x40C01DBE', 7, 117],  //Solen
	['0x40D17D00', 7, 157],  //XP Farm
	['0x47A8D815', 17, 127]  //Sheep -3
];
const skinableCorpseList = [
	'A Sheep Corpse',
	'A Bird Corpse',
	'An Eagle Corpse',
	'A Bear Corpse',
	'A Grizzly Bear Corpse',
	'A Polar Bear Corpse',
	'A Deer Corpse',
	'A Bull Corpse',
	'A Horse Corpse',
	'A Goat Corpse',
	'A Panther Corpse',
	'A Cougar Corpse',
	'A Llama Corpse',
	'A Giant Ice Serpent',
	'A Daemon Corpse',
	'A Drake Corpse',
	'A Dragon Corpse',
	'A White Wyrm Corpse',
	'An Ice Fiend Corpse',
	'A Shadow Wyrm Corpse',
	'A Cow Corpse'
];

var _runebookID = _runeBooks[0][0];
var _bookIndex = 17;
var _currentBookInt = 0;

//TODO:  Skip area if there is a player
//TODO:  Auto-stop when weapon/armor needs repair
//TODO:  When opening a corpse, QUICKLY scan items and compare to the AutoLoot Find list, and if nothing matches, CLAIM it right away

function KillSolen()
{
	Orion.ClearJournal();
	
	while (!Player.Dead())
	{
		if (Orion.ScriptRunning('AutoAttack') < 1) { Orion.ToggleScript('AutoAttack', true); }
		if (Orion.ScriptRunning('HealSelf') < 1) { Orion.ToggleScript('HealSelf', true); }
		
		UseRunebook(_bookIndex, _runebookID);
		
		while (Orion.Count('0x26B7', any, _lootBagID) < 200) //Fungi in loot bag
		{
			Orion.SetTimer('RecallTimer');

			FindTargetsToKill();
			ClaimCorpses();
			FindTargetsToKill(); //Double check to make sure there are no targets left
			ClaimCorpses();
			
			while (Orion.Timer('RecallTimer') < 5500) {
				Orion.Wait(100);
			}

			_bookIndex += 10;

			UseRunebook(_bookIndex, _runebookID); //Recall to next spawn
			CheckForPlayers(); //GTFO if we find a player
			RunebookRouter(_currentBookInt); //Route to a new Runebook if ready
			
			var goldAmt = Orion.Count('0x0EED', any, backpack, any, false);
			Orion.SetTimer('MoveGold');
			while (goldAmt > 0) {
				Orion.MoveItemType('0x0EED', any, backpack, 0, _lootBagID);
				Orion.Wait(600);
				if (Orion.Timer('MoveGold') > 1500)
					break;
			}
			if (Orion.Count('0x26B7', any, backpack, any, false) > 0) {
				Orion.MoveItemType('0x26B7', any, backpack, 0, _lootBagID);
				Orion.Wait(600);
			}

			//SendGold(_bagOfSendingID, _lootBagID); //Also happens in AutoAttack

			if (Orion.InJournal('That container cannot hold more', 'sys') || Player.Weight() > (Player.MaxWeight() * 0.7)) {
				BankUnload();
			}
		}
		
		BankSolen();
		RunToVat();
		TurnInQuest();
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
function RunebookRouter(bookNum) {
	if (_runebookID == _runeBooks[bookNum][0] && _bookIndex == _runeBooks[bookNum][2]) {
		if (bookNum == _runeBooks.length - 1) { //Start over when we reach the last Runebook
			_runebookID = _runeBooks[0][0];
			_bookIndex = _runeBooks[0][1];
			_currentBookInt = 0;
			return;
		}

		_runebookID = _runeBooks[bookNum + 1][0];
		_bookIndex = _runeBooks[bookNum + 1][1];
		_currentBookInt++;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
function FindTargetsToKill() {

	var mobList = Orion.FindType(any, any, ground, 'near|mobile|live|ignorefriends|ignoreself', '8', 'gray|criminal|orange|red');
	Orion.Wait(1000);
	
	if (mobList.length > 0) { //Orion.Print(15, '# of mobs: ' + mobList.length);
		Orion.SetTimer('KillTimer');

		if (Orion.CheckAgent('autoloot', 'Main')) {
			Orion.ControlAgent('autoloot', 'Main', 'stop');
		}

		//var mobObj = Orion.FindObject(mobList[0]);
		
		while (mobList.length > 0)
		{
			var mobObj = Orion.FindObject(mobList[0]);
			if (mobObj)
				PathTo('any', mobObj.X(), mobObj.Y(), 0);
			
			if (Orion.Timer('KillTimer') > 50000) {
				Orion.Print(33, 'TIMEOUT');
				break;
			}

			mobList = Orion.FindType(any, any, ground, 'near|mobile|live|ignorefriends|ignoreself', '8', 'gray|criminal|orange|red');
			mobObj = Orion.FindObject(mobList[0]);
			
			Orion.Wait(100);
		}
	} else {
		return;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
function ClaimCorpses() {
	var corpseList = Orion.FindType('0x2006', any, ground, 'ignoreself', 12);
	
	if (corpseList.length > 0)
	{
		//Check if the corpseList names are in the list of skinnable corpses
		var lootOrSkinCount = 0;
		for (var i = 0; i < corpseList.length; i++)
		{
			if (Orion.FindList('Autoloot', corpseList[i]).length > 0) {
				lootOrSkinCount++;
			}
			var corpseName = Orion.FindObject(corpseList[i]) && Orion.FindObject(corpseList[i]).Properties();
			for (var j = 0; j < skinableCorpseList.length; j++)
			{
				if (skinableCorpseList[j] == corpseName)
					lootOrSkinCount++;
			}
		}
		if (lootOrSkinCount == 0) {
			QuickClaim();
			Orion.Wait(50);
			return;
		}

		//Orion.Print(15, '# Corpses: ' + corpseList.length);
		for (var i = corpseList.length; i > -1; i--)
		{
			while (Orion.Dragging()) { 
				Orion.Wait(100);
			}
			
			var corpse = Orion.FindObject(corpseList[i]);

			if (corpse != null) //Bad to loop here, since the corpse might not be ours
			{
				var corpseName = Orion.FindObject(corpseList[i]) && Orion.FindObject(corpseList[i]).Properties();

				PathTo('any', corpse.X(), corpse.Y(), 1);
				
				if (!Orion.CheckAgent('autoloot', 'Main')) {
					Orion.ControlAgent('autoloot', 'Main', 'start');
				}
				
				Orion.Wait(300);
				Orion.UseObject(corpseList[i]); //Make sure the corpse is open, first
				Orion.Wait(300);
				
				var itemcount = corpseList[i] && Orion.FindListEx('Autoloot', corpseList[i]);
				Orion.Wait(itemcount.length * 800); //Multiply the item count by 800ms to wait for looting

				//Orion.Print(15, 'Corpse Name: ' + corpseName);
				if (corpseName === 'A Daemon Corpse') {
					SkinCorpse();
				} else if (corpseName === 'A Sheep Corpse') {
					SkinCorpse();
				}
			}
			
			ClaimSingle(corpseList[i]);
			Orion.CancelTarget();

			if (Orion.InJournal('You did not earn the right'))
			{
				//Orion.Print(15, 'CANNOT LOOT');
				//Orion.ClearJournal();
				break;
			}
		}
		//ClaimCorpses();
	} else {
		//Orion.Print(15, 'end ClaimCorpses()');
		Orion.CancelTarget();
		return;
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
function BankSolen() {
	Orion.Print(26, 'BankSolen');

	BankUnload();
	
	if (Orion.Count('0x1F9D', 0, backpack) > 7)
		return;
		
	GetGold(100); //Get money for Water

	//Get Water
	var vendors = ['Saloman', 'Fleta', 'Kenton', 'Fuller', 'Oriole', 'Carroll'];
	var tavern = 1;

	RecallBuyWater(tavern, _runeBooks[0][0]);
	Orion.Wait(3000);
	
	for (var i = 0; i < vendors.length; i++) {
		if (Orion.Count('0x1F9D', 0, backpack) > 7)
			break;

		Orion.ClearJournal();

		if (Orion.InJournal('must wait to perform') || 
			Orion.InJournal('book needs time') ||
			(tavern == 1 && Player.X() != 1426) ||
			(tavern == 2 && Player.X() != 2475))
		{
			Orion.Print('26', 'Recall again');
			Orion.Wait(5000);
			Orion.ClearJournal();
			RecallBuyWater(tavern, _runeBooks[0][0]);
			Orion.Wait(3000);
		}
		
		Orion.BuyRestock('Water', vendors[i]);
		//Orion.Say(vendors[i] + ' buy');
		Orion.Wait(2000);
		
		if (i == 2) //Move to next Tavern, if we've gone thru 3 NPCs
		{
			tavern ++;
			RecallBuyWater(tavern, _runeBooks[0][0]);
			Orion.Wait(2000);
		}
	}
	
	if (Orion.Count('0x1F9D', 0, backpack) < 8)
		KillSolen();
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
function RunToVat() 
{
	Orion.Print(26, 'RunToVat');

	if (Orion.ScriptRunning('AutoAttack') > 0) { Orion.ToggleScript('AutoAttack', true); }
	
	while (Player.X() != '2609')
	{
		RecallRunSolen(_runeBooks[0][0]);
	}
	
	Orion.UseObject('0x40010254');
	Orion.Wait(300);

	//Floor 1	
	if (!PathTo(5921, 5900, 1876, 0))
		RunToVat();
	Orion.UseObject('0x40010277');
	Orion.Wait(300);
	
	//Floor 2
	if (!PathTo(5874, 5855, 1851, 0))
		RunToVat();
	Orion.UseObject('0x4001028C');
	Orion.Wait(300);
	
	//Floor 3
	if (!PathTo('any', 5805, 1919, 0))
		RunToVat();
	Orion.Wait(300);

	//Pour Water
	var breakOut = 0;
	while (Orion.Count('0x1F9D', any, backpack) > 0)
	{
		Orion.UseType('0x1F9D');
		Orion.WaitForTarget(5000);
		Orion.TargetObject('0x400077B3');
		Orion.Wait(600);
		
		breakOut++;
		if (breakOut >= 10) {break;}
	}
	
	//Trash pitchers
	while (Orion.Count('0x0FF6', any, backpack) > 0)
	{
		Orion.MoveItemType('0x0FF6', 0, backpack, 0, 0x45E995AD);
		Orion.Wait(600);
		
		breakOut++;
		if (breakOut >= 20) {break;}
	}
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////
function TurnInQuest()
{
	Orion.Print(15, 'TurnInQuest');

	PathTo(5805, 5779, 1901, 1);

	var matriarch = Orion.FindObject('0x001D0274');
	if (matriarch)
	{
		PathTo('any', matriarch.X(), matriarch.Y(), 1);
	}
		
	GetZoogi(_casterKeysID);
	
	//Turn in Kill quest, and get new quest
	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60000, 100, false);
	GumpAction('0x23C255E7', 60007, 100, false);
	GumpAction('0x23C255E7', 60007, 100, false);
	GumpAction('0x23C255E7', 60007, 100, false);
	
	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60000, 100, false);
	GumpAction('0x23C255E7', 60006, 100, false);

	//Turn in Fungi quest, and get new quest
	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60001, 100, false);
	GumpAction('0x23C255E7', 60006, 100, false);
	GumpAction('0x23C255E7', 60006, 100, false);

	Orion.RequestContextMenu('0x001D0274');
	Orion.WaitContextMenuID('0x001D0274', 0);
	
	GumpAction('0x08DB94B0', 60001, 150, false);
	GumpAction('0x23C255E7', 60007, 150, false);
	
	if (Orion.Count('0x26B8') < 1)
	{
		Orion.Print('26', '*** FAILED ***');
		TurnInQuest();
	}
	
	while (Orion.Count(0x26B8, any, backpack) > 1)
	{
		Orion.Wait(50);
		Orion.Print('26', 'Store Transloc');
		StoreItemWithKeys(_casterKeysID, '0x0EBCD833', 60030, '0x26B8', 0);
	}
	
	Orion.Wait(2000);
}

function BankUnload() {
	Orion.Print(15, 'Bank Unload');
	Recall(_runeBooks[0][0], 147);
	Orion.Wait(3500);
	
	if (Player.X() != 1450)
	{
		return BankSolen();
	}
	
	Orion.Say('faxon sell');
	Orion.Wait(5000);

	Orion.Say('bank');
	Orion.Wait(300);
	OrganizeGoldGems(backpack);
	OrganizeGoldGems(_lootBagID);
}

function CheckForPlayers() {
	var mobList = Orion.FindType(any, any, ground, 'human|live|ignoreself|ignoreenemies', '8', 'blue|green|gray');
	if (mobList.length > 0) {
		Orion.Print(33, 'G T F O');

		var x = Player.X();
		var y = Player.Y();

		while ((Player.X() == x && Player.Y() == y)) {
			RecallToBank();
		}

		Orion.Say('bank');
		Orion.Wait(300);
		OrganizeGoldGems(backpack);
		OrganizeGoldGems(_lootBagID);

		return;
	}
}